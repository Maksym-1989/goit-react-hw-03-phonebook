{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/Filter/Filter.module.css","components/app/App.module.css","components/contactForm/ContactForm.js","components/section/Section.js","components/contactList/ContactList.js","components/Filter/Filter.js","components/app/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","addContact","onSubmit","this","className","css","label","input","type","pattern","title","required","onChange","button","Component","Section","children","toUpperCase","defaultProps","ContactList","contacts","deleteContact","map","id","item","text","onClick","Filter","App","contactsArray","filter","some","element","console","log","alert","contact","uuidv4","contactId","prevState","onChangeFilter","getFilteredContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","container","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c4f70d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3xShs\",\"input\":\"ContactForm_input__3KzwB\",\"button\":\"ContactForm_button__qL36N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3mT-c\",\"text\":\"ContactList_text__2y3rB\",\"button\":\"ContactList_button__2A7Ny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2GE41\",\"input\":\"Filter_input__2AZkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3zvdq\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.addContact(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label className={css.label}>\r\n          Name\r\n          <input\r\n            className={css.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n\r\n        <label className={css.label}>\r\n          Number\r\n          <input\r\n            className={css.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={css.button}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport css from \"./Sections.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title.toUpperCase()}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: \"Some title\",\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={css.item}>\r\n          <p className={css.text}>{name}: {number}</p>\r\n          <button\r\n            className={css.button}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteContact(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={css.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={css.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport Section from \"../section/Section\";\nimport ContactList from \"../contactList/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"../Filter/Filter\";\nimport css from \"./App.module.css\";\n\nimport contactsArray from \"../../data/Contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: contactsArray,\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    if (this.state.contacts.some((element) => element.name === name)) {\n      console.log(alert(`${name} is already in contacts`));\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  onChangeFilter = (event) => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  getFilteredContacts = () => {\n    const filter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className={css.container}>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {!this.state.contacts.length ? (\n            <></>\n          ) : (\n            <>\n              <Filter\n                value={this.state.filter}\n                onChange={this.onChangeFilter}\n              />\n              <ContactList\n                contacts={filteredContacts}\n                deleteContact={this.deleteContact}\n              />\n            </>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}